<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd">
	   <!-- 配置数据源 -->
	   <bean id="dataSource"  class="org.apache.commons.dbcp2.BasicDataSource">
	   	<!-- MySQL数据库驱动 -->
	   	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	   	<!-- 连接数据库的url -->
	   	<property name="url" value="jdbc:mysql://localhost:3306/shop?characterEncoding=utf8"></property>
	   	<!-- 连接数据库的用户名 -->
	   	<property name="username" value="user2"></property>
	   	<!-- 连接数据库的密码 -->
	   	<property name="password" value="123"></property>
	    <!-- 最大连接数 -->
	    <property name="maxTotal" value="30"></property>
	    <!-- 最大空闲连接数 -->
	    <property name="maxIdle" value="10"></property>
	   </bean>
	   <!-- 添加事务支持 -->
	  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  	<property name="dataSource" ref="dataSource"> </property>
	  </bean>
	   <!--开启事务注解-->
	  <tx:annotation-driven transaction-manager="txManager"/>
	  <!-- 配置MyBatis工厂,同时指定数据源 -->
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  	<property name="dataSource" ref="dataSource"></property>
	  	<!-- configLoaction的属性值为MyBatis的核心文件 -->
	  	<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
	  </bean>
	  <!-- Mapper代理开发 
	  （Spring将指定包中所有被@Mapper注解的接口自动装配为MyBatis的映射接口）
	  -->
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  	<!-- MyBatis的组件扫描器 -->
	  	<property name="basePackage" value="dao"></property>
	  	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	  </bean>   
	  <!-- 指定需要扫描的子包 -->
	    <context:component-scan base-package="service"/>
</beans>
